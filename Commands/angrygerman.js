'use strict';
const { Angrygerman } = require('../Database/dbangrygerman');
const Sequelize = require('sequelize');
const Discord = require('discord.js');
const Error = require("./util.js");

module.exports = async function (textsplit, msg) {
    textsplit.shift();
    if(textsplit.length < 1) {
        let sumMessages = await sumofangrygermans("message").catch(err => console.log(err));
        let sumReactions = await sumofangrygermans("reaction").catch(err => console.log(err));

        const angryGermanEmbeded = new Discord.MessageEmbed()
            .setColor('#F74D57')
            .setTitle('Angrygerman')
            .addField('Messages', `Es wurden bereits ${sumMessages.amount} <:angrygerman:816427180627460117> gepostet (seit 05.03.2021)`, false)
            .addField('Reactions', `Es wurde bereits mit ${sumReactions.amount} <:angrygerman:816427180627460117> reagiert (seit 05.03.2021)`, false)
            .setTimestamp()
            .setFooter('Generated by your most loved BOT');

        msg.channel.send(angryGermanEmbeded);

    } else if(textsplit[0] === "daily") {
        let dailymessage = await dailyangrygermans("message", "date", "ASC");
        let dailyreaction = await dailyangrygermans("reaction", "date", "ASC");

        let dailymessagearray =  dailymessage.map((day,position) => `${day.date}: ${day.amount}`).join('`\n`');
        let dailyreactionarray =  dailyreaction.map((day,position) => `${day.date}: ${day.amount}`).join('`\n`');

        const angryGermanEmbeded = new Discord.MessageEmbed()
            .setColor('#F74D57')
            .setTitle('Angrygerman Last 10 Days')
            .addField('Messages', "`"+dailymessagearray+"`", false)
            .addField('Reactions', "`"+dailyreactionarray+"`", false)
            .setTimestamp()
            .setFooter('Generated by your most loved BOT');

        msg.channel.send(angryGermanEmbeded);

    } else if(textsplit[0] === "ranking") {
        let dailymessage = await dailyangrygermans("message", "amount", "DESC");
        let dailyreaction = await dailyangrygermans("reaction", "amount", "DESC");

        let dailymessagearray =  dailymessage.map((day,position) => `${position + 1}.  ${day.date}:  ${day.amount}`).join('`\n`');
        let dailyreactionarray =  dailyreaction.map((day,position) => `${position + 1}.  ${day.date}:  ${day.amount}`).join('`\n`');

        const angryGermanEmbeded = new Discord.MessageEmbed()
            .setColor('#F74D57')
            .setTitle('Angrygerman Daily Ranking')
            .addField('Messages', "`"+dailymessagearray+"`", false)
            .addField('Reaction', "`"+dailyreactionarray+"`", false)
            .setTimestamp()
            .setFooter('Generated by your most loved BOT');

        msg.channel.send(angryGermanEmbeded);
    } else {
        msg.channel.send(Error.wrongCommand);
        return false;
    }
}

async function sumofangrygermans(type) {
    //easier variant of that query
    //await Angrygerman.sum('amount', { where: { type: "reaction" } });
    return await Angrygerman.findOne({
        attributes: [ [Sequelize.fn('SUM', Sequelize.col('amount')), 'amount'] ],
        where:{ type: type } }).catch(err => console.log(err));
}

async function dailyangrygermans(type, order, orderdirection) {
    return await Angrygerman.findAll({
        where: { type : type },
        group: 'amount',
        order: [ [order, orderdirection] ],
        limit: 10
    }).catch(err => console.log(err));
}
